# This workflow will upload a Python Package using Twine when a release is created
# It supports linux and macos. Fir linux a source distribution and for macos a wheel are published.
# Thanks to [Jo Bovy](https://github.com/jobovy) for his suggestion to use `cibuilwheel` to build the wheel
#  for macos. We partially adopted this from [galpy package](https://github.com/jobovy/galpy/blob/main/.github/workflows/build_macosx_windows_wheels.yml)


name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:

  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
    
    steps:
      # Check-out this prepository
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        python -m pip  install -r requirements.txt
        brew install gsl
    - name : Build macos Wheel
      run : |
        git submodule update --init --recursive
        mkdir dist
        python -m build --wheel --outdir dist
    # Upload wheel as artifact
    - uses: actions/upload-artifact@v3
      with:
       name: fake_spectra-wheel-python-${{ matrix.python-version }}-${{ matrix.os }}
       path: dist/*.whl

# We need to run on Ubuntu for pypa/gh-action-pypi-publish action
# so might as well also combine
  combine:
    name: Combine wheels and source distribution into single artifact and upload to PyPI
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          mkdir tmp_dist
          mkdir dist
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          pip install -r requirements.txt
          sudo apt update
          sudo apt install -y libgsl-dev libboost-test-dev
      - name: Build package
        run: |
          git submodule update --init --recursive
          python -m build --sdist
      - uses: actions/download-artifact@v3
        with:
          path: tmp_dist/
      - run: find tmp_dist/ -mindepth 2 -type f -exec mv -i '{}' dist/ ';'
      - uses: actions/upload-artifact@v3
        with:
          name: fake_spectra-wheels-macos-latest
          path: dist/*.whl
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: dist/
          
  TestMacWheel:
    name: Test the published macos wheel
    needs: combine
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install the pushed package
        run: |
          python -m pip install --upgrade pip
          pip install fake_spectra

